clear 
close all
clc

%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: /Users/gabor.40/Dropbox/Lake Erie Data/PaperFigures/owrcmasterdf.csv
%
% Auto-generated by MATLAB on 14-Aug-2023 21:01:23

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 186);

% Specify range and delimiter
opts.DataLines = [2, Inf];
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["VarName1", "SampleID", "Year", "Month", "Day", "Time", "Site", "SampleDepth_m", "Lat_D", "Lat_M", "Lat", "Lon_D", "Lon_M", "Lon", "distance_km", "Alkalinity_mgL", "Organiccontent_", "ConcPOM_mgL", "NPOC_mgL", "DIC", "TN_mgL", "DON_umolL", "TC_mgL", "Microcystin", "Chlorophylla_L", "NitrateNO2_olL", "Ammonium_olL", "Nitrite_olL", "DRP_olL", "Silicate_olL", "Nitrate_olL", "TP_olL", "TKN_olL", "TN_olL", "TNTP_molar", "WaterDepth_m", "Greenalgaechla_L", "Bluegreenalgaechla_L", "Diatomschla_L", "Cryptophyteschla_L", "abs254", "SUVA254", "BIX", "HIX", "FI", "MaxEm", "RamanArea", "Date_MMDDYYYY", "Time_HHmmss", "Time_FractSec", "SiteName", "Depthm", "Matchingdepth", "ChlorophyllRFU", "Condcm", "fDOMQSU", "fDOMRFU", "nLFCondcm", "ODOpercsat", "ODOperclocal", "ODOmgL", "Pressurepsia", "Salpsu", "SpCondcm", "TALPCRFU", "TDSmgL", "TurbidityFNU", "TSSmgL", "WiperPositionvolt", "pH", "pHmV", "TempC", "VerticalPositionm", "BatteryV", "incorrectpH", "pHadjusted", "Datetime", "month", "Unnamed0", "par1", "par1_type", "par2", "par2_type", "alkalinity", "dic", "opt_k_bisulfate", "opt_k_carbonic", "opt_k_fluoride", "opt_total_borate", "opt_gas_constant", "opt_pH_scale", "opt_buffers_mode", "salinity", "temperature", "pressure", "total_ammonia", "total_borate", "total_calcium", "total_fluoride", "total_phosphate", "total_silicate", "total_sulfate", "total_sulfide", "peng_correction", "gas_constant", "total_alpha", "total_beta", "pressure_atmosphere", "pressure_atmosphere_out", "pCO2", "fCO2", "bicarbonate", "carbonate", "aqueous_CO2", "xCO2", "alkalinity_borate", "hydroxide", "alkalinity_phosphate", "alkalinity_silicate", "alkalinity_ammonia", "alkalinity_sulfide", "hydrogen_free", "revelle_factor", "saturation_calcite", "saturation_aragonite", "pH_total", "pH_sws", "pH_free", "pH_nbs", "gamma_dic", "beta_dic", "omega_dic", "gamma_alk", "beta_alk", "omega_alk", "isocapnic_quotient", "isocapnic_quotient_approx", "psi", "substrate_inhibitor_ratio", "alkalinity_alpha", "alkalinity_beta", "HCO3", "CO3", "CO2", "BOH4", "BOH3", "OH", "Hfree", "H3PO4", "H2PO4", "HPO4", "PO4", "H3SiO4", "H4SiO4", "NH3", "NH4", "HS", "H2S", "HSO4", "SO4", "HF", "F", "alpha", "alphaH", "beta", "betaH", "k_CO2", "k_carbonic_1", "k_carbonic_2", "k_water", "k_borate", "k_bisulfate", "k_fluoride", "k_phosphoric_1", "k_phosphoric_2", "k_phosphoric_3", "k_silicate", "k_ammonia", "k_sulfide", "k_calcite", "k_aragonite", "fugacity_factor", "vp_factor", "fH", "k_alpha", "k_beta","rwf"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "string", "categorical", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "datetime", "datetime", "double", "categorical", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "datetime", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "string", "double", "double", "string", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, ["Time", "omega_dic", "omega_alk"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["Time", "Site", "SiteName", "omega_dic", "omega_alk"], "EmptyFieldRule", "auto");
opts = setvaropts(opts, "Date_MMDDYYYY", "InputFormat", "MM/dd/yyyy");
opts = setvaropts(opts, "Time_HHmmss", "InputFormat", "HH:mm:ss");
opts = setvaropts(opts, "Datetime", "InputFormat", "MM/dd/yyyy HH:mm");
opts = setvaropts(opts, ["SampleID", "Microcystin"], "TrimNonNumeric", true);
opts = setvaropts(opts, ["SampleID", "Microcystin"], "ThousandsSeparator", ",");

% Import the data
owrc = readtable("/Users/gabor.40/Dropbox/Lake Erie Data/PaperFigures/owrcmasterdf.csv", opts);
clear owrcmasterdf

%% Clear temporary variables
clear opts

%Find rows for June, August, October surface samples
June = find(owrc.Month==6 & owrc.SampleDepth_m==0.5);
Aug = find(owrc.Month==8 & owrc.SampleDepth_m==0.5);
Oct = find(owrc.Month==10 & owrc.SampleDepth_m==0.5);


%% calculate linear fits between DOM chemistry and river water fraction

DOCJ=fitlm(owrc.rwf(June), owrc.NPOC_mgL(June));
DOCA=fitlm(owrc.rwf(Aug), owrc.NPOC_mgL(Aug));
DOCO=fitlm(owrc.rwf(Oct), owrc.NPOC_mgL(Oct));

SUVJ=fitlm(owrc.rwf(June), owrc.SUVA254(June));
SUVaA=fitlm(owrc.rwf(Aug), owrc.SUVA254(Aug));
SUVO=fitlm(owrc.rwf(Oct), owrc.SUVA254(Oct));

HIXJ=fitlm(owrc.rwf(June), owrc.HIX(June));
HIXA=fitlm(owrc.rwf(Aug), owrc.HIX(Aug));
HIXO=fitlm(owrc.rwf(Oct), owrc.HIX(Oct));


BIXJ=fitlm(owrc.rwf(June), owrc.BIX(June));
BIXA=fitlm(owrc.rwf(Aug), owrc.BIX(Aug));
BIXO=fitlm(owrc.rwf(Oct), owrc.BIX(Oct)) ;

